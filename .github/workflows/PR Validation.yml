name: FastAPI PR Validation

on:
  pull_request:
    branches:
      - 'main'      # Rama principal donde quieres validar los PRs
      - 'develop'   # Rama de desarrollo, si aplica
    paths:
      - '**/*'   # Para que se ejecute el flujo en cualquier cambio en el PR

jobs:
  validate-branch-name:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Validate branch name
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          if [[ ! "$BRANCH_NAME" =~ ^(feature|fix|hotfix|docs|release)\/.+$ ]]; then
            echo "Error: Invalid branch name. Branch names must start with one of the following prefixes: feature/, fix/, hotfix/, docs/, or release/ and must not be empty after the prefix."
            exit 1
          fi

  set-up-python:
    runs-on: ubuntu-latest
    needs: validate-branch-name   # Asegura que se ejecute después de la validación de la rama

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.12.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt   # Instala dependencias del proyecto

  run-tests:
    runs-on: ubuntu-latest
    needs: set-up-python   # Asegura que se ejecute después de la instalación de dependencias

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run tests with pytest
        run: |
          pytest --maxfail=1 --disable-warnings -q   # Ejecuta pruebas con pytest

  linting:
    runs-on: ubuntu-latest
    needs: run-tests  # Solo se ejecuta si las pruebas pasan

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.12.8
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.8'

      - name: Install dependencies for linting
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt   # Instala dependencias para linting (como flake8)

      - name: Lint code with flake8
        run: |
          flake8 .  # Linting para verificar el estilo de código

  status-check:
    runs-on: ubuntu-latest
    needs: linting   # Solo se ejecuta si el linting pasa

    steps:
      - name: Set up GitHub CLI
        uses: cli/cli@v2

      - name: Check status checks
        run: |
          # Verifica si todos los status checks han pasado en el PR antes de permitir la fusión
          gh pr checks --repo ${{ github.repository }} --pr ${GITHUB_REF#refs/pull/} --status success

      - name: Comment on PR if validation fails
        if: failure()  # Si la validación falla, añade un comentario al PR
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "The PR failed the validation. Please review the issues and try again."
